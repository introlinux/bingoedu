' Gambas class file

Property BingoTemporalDatos As Bingo
Private btmp As Bingo ''bingo donde voy trabajar con los datos

Property ElementoBingoEditado As Variant ''elemento que estamos editantdo

Private $elementoBingoEditado As Variant

Private ec As Variant 'elemento del carton que esta relacionado con el elemntoBingo que se esta Editando

Public Sub ButtonSalir_Click()
  
  Me.Close()
  
End

Public Sub Form_Open()
  
  If Not IsNull($elementoBingoEditado) Then
    
    ButtonGeneraElemento.text = ("Guadar el elemento editado")
    ButtonGeneraElemento.Picture = Picture["icon:/32/save"]
    
    Me.Title = ("Editando elemento")
    
    ''TODO: Estamos en mode Edicion, hay que cargar los datos del elemento bingo y su enlace al elemento carton
    'dependiendo del tipo de elemento (texto, imagen,sonido), tengo que ir rellenado los datos...)
    
    rellenarDatosFormulario($elementoBingoEditado)
    
  Else
    Me.Title = ("Nuevo elemento")
  Endif
  
  Me.Center()
  
End

Public Sub ButtonBoxSonidoBingo_Click()
  
  Dialog.Filter = ["*.mp3;*.wav;*.au", ("Archivos de sonido mp3, wav, au")]
  If Dialog.Openfile() Then
    Return 'se ha cancelado la eleccion de un fichero
  Endif
  
  ButtonBoxSonidoBingo.text = File.Name(Dialog.path)
  ButtonBoxSonidoBingo.tag = Dialog.Path
  'activar el radiobutton
  RadioButtonBingoSonido.value = True
  
End

Public Sub PictureBoxIniciarGrabadora_MouseUp()
  
  Dim cadena As New String[]
  
  FormGrabadora.datos = cadena
  FormGrabadora.ShowDialog()
  
  If cadena.count > 0 Then 
    
    ButtonBoxSonidoBingo.text = File.Name(cadena[0])
    ButtonBoxSonidoBingo.tag = cadena[0]
    
    RadioButtonBingoSonido.value = True
  Endif
  
End

Public Sub LabelIniciarGrabadora_MouseUp()
  
  PictureBoxIniciarGrabadora_MouseUp()
  
End

Public Sub ButtonGeneraElemento_Click()
  
  Dim respuesta As Boolean '' respuesta de funcion de la copia de archivo...
  Dim eB As Variant 'cualquier tipo de elemnto , para el Bingo
  
  If IsNull($elementoBingoEditado) Then
    ''------------------------------------
    '' INSERTANDO ELEMENTO
    ''------------------------------------
    'Estamos insertando un nuevo elemento en el bingo
    
    '1º crea el elemnto bingo
    'Compruebo las 3 opciones que tenemos de crear un elemento Bingo
    If RadioButtonBingoTexto.value = True Then
      eb = New ElementoTexto
      eb.texto = TextBoxTEXTOBINGO.Text
    Else
      If RadioButtonBingoImagen.Value = True Then
        eb = New ElementoImagen
        eb.rutaimagen = ButtonBoxImagenBingo.Text
        'copiar el fichero al directorio del bingo...
        respuesta = btmp.copiaFichero(ButtonBoxImagenBingo.Tag)
        If respuesta = False Then
          Return 
        Endif
        
      Else
        If RadioButtonBingoSonido.value = True Then
          eb = New ElementoSonido
          eb.rutasonido = ButtonBoxSonidoBingo.Text
          respuesta = btmp.copiaFichero(ButtonBoxSonidoBingo.Tag)
          If respuesta = False Then
            Return 
          Endif
        Endif
      Endif
    Endif
    
    '2º crea el elemento carton
    'Compruebo las 3 opciones que tenemos de crear un elemento Elemento
    If RadioButtonCartonImagen.value = True Then
      eC = New ElementoImagen
      eC.rutaimagen = ButtonBoxImagenCarton.Text
      'copiar el fichero al directorio del bingo...
      respuesta = btmp.copiaFichero(ButtonBoxImagenCarton.Tag)
      If respuesta = False Then
        Return
      Endif
    Else
      If RadioButtonCartonTexto.value = True Then
        eC = New ElementoTexto
        eC.texto = TextBoxTEXTOCARTON.Text
      Else
        '--------------------------------------------------------------------------------
        'caso en que lo que hacemos en IGUALAR a las propiedades del elemento bingo
        '--------------------------------------------------------------------------------
        Select Case eb.tipoElemento()
          Case Upper$("ElementoImagen")
            eC = New ElementoImagen
            eC.rutaimagen = eb.rutaimagen 'solo escribe el nombre del fichero.
          Case Upper$("ElementoTexto")
            ec = New ElementoTexto
            ec.texto = eb.texto
          Case Upper$("ElementoSonido")
            ''aviso al usuario que hay un error y no puedo continuar.
            Message.Info(("Error. El cartón no puede tener elementos de sonido, es sólo un cartón ;-)"))
            Return 'no puedo continuar
        End Select
      Endif
    Endif
    
    '3º enlaza a los dos elementos!!!
    eC.enlace = eb.id
    eB.enlace = eC.id
    
    '4º  guardo los nuevo elementos creados...
    '4.1. añado a la lista de elemntoes Bingo y Carton
    btmp.ListaElementosBingo.Add(eb.id) 'añado a una array de cadenas, el dato del id
    btmp.ListaElementosCarton.Add(ec.id)
    '4.2 añado a la lsita de array de elementos
    btmp.ArrayElementosBingo.Add(eb) 'añado a un array de elemento, el elemento en si
    btmp.ArrayElementosCarton.Add(ec)
    
    'todo Ok, elementos añadidos !!!
    FormModificarBingos.ButtonRefrescar_Click()
    Me.close()
  Else
    '{  tramo de editar un elemento
    ''------------------------------------
    '' EDITANTO ELEMENTO
    ''------------------------------------
    ''TODO:  'estamos editando un elemento existente en el bingo !!!     'Guardar un elemento que ya existe...
    'hay que guardarlo en este formulario, modificnado los datos del bingo...
    '
    ' Lo que hay que hacer es, modificar el elemento del Bingo y Carton relacionados.
    'Compruebo las 3 opciones que tenemos de crear un elemento Bingo
    If RadioButtonBingoTexto.value = True Then
      Me.ElementoBingoEditado = comprobarElemento(Me.ElementoBingoEditado, "elementotexto", btmp.ArrayElementosBingo)
      Me.ElementoBingoEditado.texto = TextBoxTEXTOBINGO.Text
    Else
      If RadioButtonBingoImagen.Value = True Then
        Me.ElementoBingoEditado = comprobarElemento(Me.ElementoBingoEditado, "elementoimagen", btmp.ArrayElementosBingo)
        Me.ElementoBingoEditado.rutaimagen = ButtonBoxImagenBingo.Text
        'copiar el fichero al directorio del bingo...
        respuesta = btmp.copiaFichero(ButtonBoxImagenBingo.Tag, "editando")
        If respuesta = False Then
          'Si estamos editanto el elemento puede existir
          'Return 
        Endif
      Else
        If RadioButtonBingoSonido.value = True Then
          Me.ElementoBingoEditado = comprobarElemento(Me.ElementoBingoEditado, "elementosonido", btmp.ArrayElementosBingo)
          Me.ElementoBingoEditado.rutasonido = ButtonBoxSonidoBingo.Text
          respuesta = btmp.copiaFichero(ButtonBoxSonidoBingo.Tag, "editando")
          If respuesta = False Then
            'si estamos editando el elemento puede existir
            'Return 
          Endif
        Endif
      Endif
    Endif
    ''modifico el elemnto Carton, relacionado con el elemnteo
    
    '2º crea el elemento carton
    'Compruebo las 3 opciones que tenemos de crear un elemento Elemento
    If RadioButtonCartonImagen.value = True Then
      ec = comprobarElemento(ec, "elementoimagen", btmp.ArrayElementosCarton)
      eC.rutaimagen = ButtonBoxImagenCarton.Text
      'copiar el fichero al directorio del bingo...
      respuesta = btmp.copiaFichero(ButtonBoxImagenCarton.Tag, "editando")
      If respuesta = False Then
        
        Return 
      Endif
    Else
      If RadioButtonCartonTexto.value = True Then
        ec = comprobarElemento(ec, "elementotexto", btmp.ArrayElementosCarton)
        eC.texto = TextBoxTEXTOCARTON.Text
      Else
        '--------------------------------------------------------------------------------
        'caso en que lo que hacemos en IGUALAR a las propiedades del elemento bingo
        '--------------------------------------------------------------------------------
        Select Case Me.ElementoBingoEditado.tipoElemento()
          Case Upper$("ElementoImagen")
            ec = comprobarElemento(ec, "elementoimagen", btmp.ArrayElementosCarton)
            eC.rutaimagen = Me.ElementoBingoEditado.rutaimagen
          Case Upper$("ElementoTexto")
            ec = comprobarElemento(ec, "elementotexto", btmp.ArrayElementosCarton)
            ec.texto = Me.ElementoBingoEditado.texto
          Case Upper$("ElementoSonido")
            ''aviso al usuario que hay un error y no puedo continuar.
            Message.Info(("Error. El cartón no puede tener elementos de sonido, es sólo un cartón ;-)"))
            Return 'no puedo continuar
        End Select
      Endif
    Endif
    'todo Ok, elementos modificados !!!
    FormModificarBingos.ButtonRefrescar_Click()
    Me.close()
    '} tramo de editar un elemento
  Endif
  
End

Public Sub ButtonBoxImagenBingo_Click()
  
  Dialog.Filter = ["*.png;*.jpg;*.jpeg;*.bmp", ("Archivos de imagen")]
  If Dialog.OpenFile() Then
    Return 'se ha cancelado la eleccion de un fichero
  Endif
  
  ButtonBoxImagenBingo.text = File.Name(Dialog.path)
  ButtonBoxImagenBingo.tag = Dialog.Path
  
  PictureBoxBingo.Picture = Picture[ButtonBoxImagenBingo.tag]
  
  RadioButtonBingoImagen.value = True
  
End

Private Function BingoTemporalDatos_Read() As Bingo
  
  Return btmp
  
End

Private Sub BingoTemporalDatos_Write(Value As Bingo)
  
  btmp = value
  
End

Public Sub ButtonBoxImagenCarton_Click()
  
  Dialog.Filter = ["*.png;*.jpg;*.jpeg;*.bmp", ("Archivos de imagen")]
  If Dialog.Openfile() Then
    Return 'se ha cancelado la eleccion de un fichero
  Endif
  
  ButtonBoxImagenCarton.text = File.Name(Dialog.path)
  ButtonBoxImagenCarton.tag = Dialog.Path
  PictureBoxCarton.Picture = Picture[ButtonBoxImagenCarton.tag]
  
  RadioButtonCartonImagen.value = True
  
End

Public Sub TextBoxTEXTOCARTON_KeyPress()
  
  RadioButtonCartonTexto.Value = True 'activo el radiobuton automaticamente
  
End

Public Sub TextBoxTEXTOBINGO_KeyPress()
  
  RadioButtonBingoTexto.value = True 'activo el radiobuton de forma automatica cuando escribo algo.
  
End

Private Function ElementoBingoEditado_Read() As Variant
  
  Return $elementoBingoEditado
  
End

Private Sub ElementoBingoEditado_Write(Value As Variant)
  
  $elementoBingoEditado = value
  
End

'-------------------- relleno de datos del formulario editado ---------------
Public Sub rellenarDatosFormulario(e As Variant)
  
  Select Case e.tipoElemento()
    Case Upper$("elementoTexto")
      textboxTEXTOBINGO.text = e.texto
      RadioButtonBingoTexto.Value = True
    Case Upper$("elementoImagen")
      ButtonBoxImagenBingo.text = e.rutaimagen
      ButtonBoxImagenCarton.tag = User.home & "/bingoedu/" & Me.BingoTemporalDatos.NombreFichero & "/" & e.rutaimagen
      RadioButtonBingoImagen.Value = True
      PictureBoxBingo.Picture = Picture[User.home & "/bingoedu/" & Me.BingoTemporalDatos.NombreFichero & "/" & e.rutaimagen]
    Case Upper$("elementoSonido")
      
      RadioButtonBingoSonido.value = True
      ButtonBoxSonidoBingo.text = e.rutasonido
      ButtonBoxSonidoBingo.tag = User.home & "/bingoedu/" & Me.BingoTemporalDatos.NombreFichero & "/" & e.rutasonido
  End Select
  
  ''TODO: escribir datos el elemento enlazado...
  eC = Me.BingoTemporalDatos.buscaElemento(e.enlace, Me.BingoTemporalDatos.ArrayElementosCarton)
  'cuando un elemento de carton es igual al elemento del bingo, lo que se ha hecho en crear un elemento Texto / imagen con las mismas propiedades
  
  Select Case eC.tipoElemento()
    Case Upper$("elementoTexto")
      TextBoxTEXTOCARTON.text = ec.texto
      RadioButtonCartonTexto.value = True
    Case Upper$("elementoImagen")
      ButtonBoxImagenCarton.text = ec.rutaimagen
      ButtonBoxImagenCarton.tag = User.home & "/bingoedu/" & Me.BingoTemporalDatos.NombreFichero & "/" & ec.rutaimagen
      PictureBoxCarton.Picture = Picture[ButtonBoxImagenCarton.tag]
      RadioButtonCartonImagen.Value = True
  End Select
  
End

Public Function comprobarElemento(e As Variant, tipo As String, ArrayElementos As Elemento[]) As Variant
  
  Dim eEliminar As Variant
  Dim numero As Integer
  
  Dim $elementoImagen As New ElementoImagen
  Dim $elementoSonido As New ElementoSonido
  Dim $elementoTexto As New ElementoTexto
  'conversion de tipo de elemento, si no fuera igual al "tipo" que nos pasan.."
  If Lower$(e.tipoElemento()) <> Lower$(tipo) Then
    'no es del mismo tipo... :(
    $elementoImagen.enlace = e.enlace
    $elementoImagen.id = e.id
    
    $elementoSonido.enlace = e.enlace
    $elementoSonido.id = e.id
    
    $elementoTexto.enlace = e.enlace
    $elementoTexto.id = e.id
    
    Select Case Lower$(tipo)
      Case Lower$("elementotexto")
        '1º buca el elemento actual en la lista
        eEliminar = Me.BingoTemporalDatos.buscaElemento($elementoTexto.id, ArrayElementos)
        
        '2º lo elimina,
        numero = ArrayElementos.Find(eEliminar)
        ArrayElementos.Delete(numero)
        '3º inserta a su vez el nuevo elemento.
        ArrayElementos.Add($elementoTexto, numero)
        
        Return $elementoTexto
      Case Lower$("elementoimagen")
        '1º buca el elemento actual en la lista
        eEliminar = Me.BingoTemporalDatos.buscaElemento($elementoImagen.id, ArrayElementos)
        '2º lo elimina,
        numero = ArrayElementos.Find(eEliminar)
        ArrayElementos.Delete(numero)
        '3º inserta a su vez el nuevo elemento.
        ArrayElementos.Add($elementoImagen, numero)
        
        Return $elementoImagen
      Case Lower$("elementosonido")
        '1º buca el elemento actual en la lista
        eEliminar = Me.BingoTemporalDatos.buscaElemento($elementoSonido.id, ArrayElementos)
        
        '2º lo elimina,
        numero = ArrayElementos.Find(eEliminar)
        ArrayElementos.Delete(numero)
        '3º inserta a su vez el nuevo elemento.
        ArrayElementos.Add($elementoSonido, numero)
        
        Return $elementoSonido
    End Select
    
  Endif
  
  Return e
  
End

Public Sub PictureBoxSonido_MouseDown()
  
  If ButtonBoxSonidoBingo.text = "" Then Return
  
  If Exist(ButtonBoxSonidoBingo.tag) Then 
    
    ModuleVarios.ReproducirSonido(ButtonBoxSonidoBingo.tag)   ''en .tag esta guardada la ruta completa
    
  Endif
  
End

Public Sub PictureBoxBingo_Drop()
  
  Dim subcadena As String[]
  Dim cadena As String[]
  
  If Drag.Type = 1 Then 
    cadena = Split(Drag.data, "\n")
    subcadena = Split(cadena[0], "\r")
    subcadena[0] = Replace$(subcadena[0], "file://", "")
    
    If Upper(File.Ext(subcadena[0])) = Upper("png") Or Upper(File.Ext(subcadena[0])) = Upper("jpg") Then 
      
      ButtonBoxImagenBingo.text = File.Name(subcadena[0])
      ButtonBoxImagenBingo.tag = subcadena[0]
      
      PictureBoxBingo.Picture = Picture.load(ModuleVarios.URLDecode(subcadena[0]))
      
      RadioButtonBingoImagen.value = True
    Else
      Message.E
      
      Error(("Sólo se aceptan imagenes .png y .jpg"))
    Endif
  Endif
  
End

Public Sub PictureBoxCarton_Drop()
  
  Dim subcadena As String[]
  Dim cadena As String[]
  
  If Drag.Type = 1 Then 
    cadena = Split(Drag.data, "\n")
    subcadena = Split(cadena[0], "\r")
    subcadena[0] = Replace$(subcadena[0], "file://", "")
    
    If Upper(File.Ext(subcadena[0])) = Upper("png") Or Upper(File.Ext(subcadena[0])) = Upper("jpg") Then 
      
      ButtonBoxImagenCarton.text = File.Name(subcadena[0])
      ButtonBoxImagenCarton.tag = subcadena[0]
      
      PictureBoxCarton.Picture = Picture.load(ModuleVarios.URLDecode(subcadena[0]))
      
      RadioButtonCartonImagen.value = True
    Else
      Message.Error(("Sólo se aceptan imagenes .png y .jpg"))
    Endif
  Endif
  
End

'-------------------------

Public Sub PictureBoxSonido_Drop()
  
  Dim subcadena As String[]
  Dim cadena As String[]
  
  If Drag.Type = 1 Then 
    cadena = Split(Drag.data, "\n")
    subcadena = Split(cadena[0], "\r")
    subcadena[0] = Replace$(subcadena[0], "file://", "")
    
    If Upper(File.Ext(subcadena[0])) = Upper("mp3") Or Upper(File.Ext(subcadena[0])) = Upper("au") Then 
      
      ButtonBoxSonidoBingo.text = File.Name(subcadena[0])
      ButtonBoxSonidoBingo.tag = subcadena[0]
      
      RadioButtonBingoSonido.value = True
    Else
      Message.Error(("Sólo se aceptan sonidos .mp3 y .au"))
    Endif
  Endif
  
End

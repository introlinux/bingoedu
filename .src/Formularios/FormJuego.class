' Gambas class file

Private ProgramaVoz As String = "pico2wave"

Public bingotmp As Bingo

Public modo As String

Public tiempo As Integer
Public hablar As Boolean = False

Private bingoJuegoTmp As BingoJuego

Public texto As String

Private pausado As Boolean = False ''control del boton de pausa/inicio

Private elementoActual As Variant 'elemento actual si es de sonido..

Public idioma As String

Public sonidosalto As String ''sonido que se escucha al saltar el elemento...

Public Sub Form_Open()
  'activo pantalla completa
  
  'depuracion: Comrpobar modo IDE
  If modoIde() Then
    Me.FullScreen = False
  Else
    Me.FullScreen = True
  Endif
  
  Me.FullScreen = True
  
  ''Modo automatico o Modo Manual
  Select Case modo
    Case "automatico"
      'desactiva o activa algunos botones....
      'activar el reloj de presentacion de datos
      Timer1.Delay = tiempo * 1000
      ButtonSigueLista.Enabled = False
      ButtonAtras.Enabled = False
      ButtonPausa.Visible = True
      Timer1.Start()
      ButtonPausa.Enabled = True
      ButtonNuevo.Visible = False
      asignarTexto("iniciando el juego...")
    Case "manual"
      
      ButtonSigueLista.Enabled = False    
      ButtonAtras.Enabled = False
      asignarTexto("Pulse el botón >>")
  End Select
  
  ''TODO: Indicar modo completo de pantalla...
  '  Me.FullScreen = True
  
  bingoJuegoTmp = New BingoJuego(bingotmp)  
  
  Me.Center()
  
End

Public Sub form_Show()
  
End

Public Sub ButtonSalir_Click()
  
  Me.Close()
  
End

'-----------------------------------------------------------------
''Sistema de  extraer lista de elementos Bingo y elementos Carton
''metodo para elegir aleatoriamente uno de esos elementos y su asociado
''metodo para añadir la lista de seguimiento elemento el elemento extraido
''

Public Sub comprobarElementoSonido(ele As Object)
  
  'mostra el botón de repetir para  repetir el sonido...
  If ele.tipoElemento() = Upper$("ElementoSonido") Then 
    ButtonRepetir.Enabled = True
    elementoActual = ele
  Else
    ButtonRepetir.Enabled = False  
  Endif
  
End

Public Sub ButtonNuevo_Click()
  
  Dim ele As Variant
  
  'hay que distinguir en una nueva extraccion o mostrar el elemento siguiente de los ya mostrados
  
  ele = bingoJuegoTmp.extraeElementoBingo()
  
  If IsNull(ele) Then 
    'se ha llegado al final del bingo
    
    Timer1.Stop()
    Return 
    
  Endif
  
  ''Mostra datos del elemento...
  muestraElmenento(ele)
  
  'comprobar si es un elemento de sonido
  comprobarElementoSonido(ele)
  
  ButtonAtras.Enabled = True
  If bingoJuegoTmp.Primerelemento() Then 
    ButtonAtras.Enabled = False
  Endif
  
  If bingoJuegoTmp.ultimoelemento() Then 
    ButtonSigueLista.Enabled = False
  Endif
  
End

Public Sub muestraElmenento(ele As Variant)
  
  'reproduce salto
  If Exist(User.home & "/bingoedu/" & sonidosalto) Then 
    ModuleVarios.ReproducirSonido(User.home & "/bingoedu/" & sonidosalto)
  Endif
  
  Select Case ele.tipoElemento()
    Case Upper$("ElementoImagen")
      'si es del timpo imagen se muestra la imagen (oculto el texto, y visualizo la imagen)
      TextLabelTexto.text = ""
      PictureBox1.Visible = True
      PictureBox1.Picture = Picture.load(User.home & "/bingoedu/" & Me.bingotmp.NombreFichero & "/" & ele.rutaimagen)
      DrawingArea1.visible = False
    Case Upper$("ElementoTexto")
      'si es del tipo texto se muestra el texto
      asignarTexto(ele.texto)
      PictureBox1.Visible = False
      DrawingArea1.visible = True
      
      If hablar Then 
        
        If ProgramaVoz = "pico2wave" Then 
          Shell "pico2wave -l " & eligeIdioma(idioma) & " -w /tmp/a.wav \"" & CambiaSignos(ele.texto) & "\" && aplay /tmp/a.wav"
        Else
          Shell "espeak -v" & eligeIdioma(idioma) & "+f4 " & "\"" & CambiaSignos(ele.texto) & "\""              
        Endif
        
      Endif
      
    Case Upper$("ElementoSonido")
      'si es de tipo sonido, lo reproduce...
      PictureBox1.Visible = True
      PictureBox1.Picture = Picture["icono sonido grande.png"]
      DrawingArea1.visible = False
      reproducir(ele.rutasonido)
      
  End Select
  
End

Private Sub reproducir(ruta As String)
  
  Dim RutaTrabajo As String = User.home & "/bingoedu/" & Me.bingotmp.NombreFichero & "/"
  
  ModuleVarios.ReproducirSonido(RutaTrabajo & ruta)
  
End

Private Sub asignarTexto(textoAsignado As String)
  
  Me.texto = textoAsignado
  'DrawingArea1
  'http://gambaswiki.org/wiki/comp/gb.qt4/paint/drawrichtext
  DrawingArea1.Refresh()
  
End

Public Sub DrawingArea1_Draw()
  
  Paint.Font.Size = 40
  
  If Paint.Font.TextWidth(Me.Texto) < (Me.W - 150) Then
    While Paint.Font.TextWidth(Me.Texto) < (Me.W - 150)
      Paint.Font.Size += 1
    Wend
    
  Endif
  
  Draw.Text(Me.Texto, 0, 0, Me.W, Me.H, Align.Center)
  
End

Public Sub ButtonAtras_Click()
  
  'muestra el anterior elemento
  Dim ele As Variant
  
  ele = bingoJuegoTmp.anteriorElemento()
  
  If IsNull(ele) Then 
    'se ha llegado al final del bingo
    ButtonAtras.Enabled = False
    Return 
    
  Endif
  
  ''Mostra datos del elemento...
  muestraElmenento(ele)
  
  'comprobar si es un elemento de sonido
  comprobarElementoSonido(ele)
  
  ButtonSigueLista.Enabled = True
  
  If bingoJuegoTmp.ultimoelemento() Then 
    ButtonSigueLista.Enabled = False
  Endif
  
  If bingoJuegoTmp.Primerelemento() Then 
    ButtonAtras.Enabled = False
  Endif
  
End

Public Sub ButtonSigueLista_Click()
  
  Dim ele As Variant
  
  ele = bingoJuegoTmp.siguiente()
  
  If IsNull(ele) Then 
    'se ha llegado al final del bingo
    ButtonSigueLista.Enabled = False
    Timer1.Stop() 'paro el modo automatico
    Return 
    
  Endif
  
  ''Mostra datos del elemento...
  muestraElmenento(ele)
  
  'comprobar si es un elemento de sonido
  comprobarElementoSonido(ele)
  
  ButtonAtras.Enabled = True
  If bingoJuegoTmp.ultimoelemento() Then 
    ButtonSigueLista.Enabled = False
  Endif
  
End

Public Sub ButtonListado_Click()
  
  FormMostrarResultados.lista = bingoJuegoTmp.listaActual()
  FormMostrarResultados.BingoActual = bingotmp
  FormMostrarResultados.Show()
  
End

Public Sub Timer1_Timer()
  
  ButtonNuevo_Click()
  
End

Public Sub ButtonPausa_Click()
  
  If pausado = False Then 
    Timer1.Stop()
    pausado = True
    ButtonPausa.Picture = Picture["icon:/32/play"]
  Else
    Timer1.Start()
    pausado = False
    ButtonPausa.Picture = Picture["icon:/32/pause"]
  Endif
  
End

Public Sub ButtonRepetir_Click()
  
  reproducir(elementoActual.rutasonido)
  
End

Public Function CambiaSignos(t As String) As String
  
  If InStr(t, "x") <> 0 Then t = Replace$(t, "x", " " & ("por") & " ")
  If InStr(t, "+") <> 0 Then t = Replace$(t, "+", " " & ("mas") & " ")
  If InStr(t, "-") <> 0 Then t = Replace$(t, "-", " " & ("menos") & " ")
  If InStr(t, "/") <> 0 Then t = Replace$(t, "/", " " & ("dividido") & " ")
  If InStr(t, "^") <> 0 Then t = Replace$(t, "^", " " & ("potencia") & " ")
  Return t
  
End

Public Function modoIde() As Boolean
  
  Dim s As String
  
  s = File.Load("/proc" &/ CStr(Application.Id) &/ "comm")
  
  If Left(s, 4) = "gbx3" Then
    Print "Desde el IDE: "
    Return True
  Else
    Print "Desde ejecutable: "
    Return False
  Endif
  
End

Private Function eligeIdioma(idiomatmp As String) As String
  
  If ProgramaVoz = "pico2wave" Then 
    'pico2wave 
    'los idiomas que soporta son: it-IT, fr-FR, es-ES, de-DE, en-US, en-GB
    
    Select Case idiomatmp
      Case ("Castellano")
        Return "es-ES"
      Case ("Inglés")
        Return "en-GB"
      Case ("Catalán")
        Return "ca"
      Case ("Francés")
        Return "fr-FR"
      Case ("Alemán")
        Return "de-DE"
    End Select
    
  Else
    
    ''NOTE:
    ''otros idiomas: http://espeak.sourceforge.net/languages.html
    
    Select Case idiomatmp
      Case ("Castellano")
        Return "es"
      Case ("Inglés")
        Return "en"
      Case ("Catalán")
        Return "ca"
      Case ("Francés")
        Return "fr"
      Case ("Alemán")
        Return "de"
    End Select
    
  Endif
  
End

' Gambas module file

Public Sub ReproducirSonido(ruta As String)
  
  Select Case File.Ext(ruta)
    Case "au"
      Shell "aplay " & ruta
    Case "wav"
      Shell "aplay " & ruta
    Case "mp3"
      Shell "mpg123 " & ruta
  End Select
  
End

Public Sub imprimir(bingotmp As Bingo)
  
  Dim res As Integer
  
  res = Message.Question(("¿Imprimir en formato 2x3 (6) o 2x2 (4)?"), ("2x2 (4 cartones-Apaisado)"), ("2x3 (6 cartones-Vertica)"), ("Cancelar"))
  
  Select Case res
    Case 1
      'imprimir formato 2x2 (4)
      ModuleVarios.Imprimir2x2(bingotmp)
    Case 2
      'imprimir formato 2x3 (6)
      ModuleVarios.Imprimir2x3(bingotmp)
  End Select
  
End

Public Sub imprimir2x3(bingotmp As Bingo) ''imprimir en vertical 2x3 = 6 cartones
  
  'numero de cartones / 6 -> numero de p´aginas...
  Dim NumeroPaginas As Float
  Dim paginas As Integer
  Dim arfile As New String[]
  Dim arfileborrar As String[]
  Dim nombrefile As String
  Dim ArrayCuadroBlancos As String[] = ["/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg"]
  Dim ncarton As Integer
  Dim ruta As String
  Dim contenido As String
  Dim a As Integer
  Dim arfileTodos As String[]
  Dim salida As String
  
  Inc Application.busy  
  arfileTodos = Dir(User.home & "/" & "bingoedu/" & bingotmp.NombreFichero & "/", "carton*", gb.file)
  a = -1
  
  For a = 0 To arfileTodos.Count - 1
    If File.Ext(arfileTodos[a]) = "png" Then 
      arfile.Add(arfileTodos[a])
    Endif
  Next
  
  a = -1
  For Each nombrefile In arfile
    a += 1
    arfile[a] = User.home & "/" & "bingoedu/" & bingotmp.NombreFichero & "/" & arfile[a]
  Next
  
  arfile.Insert(ArrayCuadroBlancos)
  
  NumeroPaginas = bingotmp.NumeroCartones / (2 * 3)
  
  If Int(NumeroPaginas) <> (bingotmp.NumeroCartones / (2 * 3)) Then 
    NumeroPaginas = Int(NumeroPaginas) + 1 'añado una página porque no cabe en una entera
  Endif
  
  ncarton = -1
  
  If Not (Exist("/tmp/trabajo")) Then 
    Mkdir "/tmp/trabajo"
  Else
    'borrado de fichero...
    arfileborrar = Dir("/tmp/trabajo", "pag*", gb.file)
    
    For Each nombrefile In arfileborrar
      Kill "/tmp/trabajo/" & nombrefile
    Next
  Endif
  
  ruta = User.home & "/bingoedu/" & bingotmp.NombreFichero & "/"
  For paginas = 0 To NumeroPaginas - 1
    contenido = File.Load("drawing-2x6.svg")
    ncarton += 1
    contenido = Replace(contenido, "#ruta11#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta12#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta21#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta22#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta31#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta32#", arfile[ncarton])
    
    File.Save("/tmp/trabajo/pag" & Str$(paginas) & ".svg", contenido)
    
    'convierto en png.... Shell     
    Shell ("inkscape " & "/tmp/trabajo/pag" & Str$(paginas) & ".svg" & " --export-dpi=200 --export-png=" & "/tmp/trabajo/pag" & Str$(paginas) & ".png") To salida
    
  Next
  Dec Application.busy  
  Shell "pcmanfm /tmp/trabajo"
  
  Message.Info(("Terminado!!!"))
  
End

Public Sub imprimir2x2(bingotmp As Bingo) ''imprimir en apaisado 2x2 = 4 cartones
  
  'numero de cartones / 6 -> numero de p´aginas...
  Dim NumeroPaginas As Float
  Dim paginas As Integer
  Dim arfile As New String[]
  Dim arfileborrar As String[]
  Dim nombrefile As String
  Dim ArrayCuadroBlancos As String[] = ["/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg", "/tmp/cuadroBlanco.jpg"]
  Dim ncarton As Integer
  Dim ruta As String
  Dim contenido As String
  Dim a As Integer
  Dim arfileTodos As String[]
  Dim salida As String
  
  Inc Application.busy  
  arfileTodos = Dir(User.home & "/" & "bingoedu/" & bingotmp.NombreFichero & "/", "carton*", gb.file)
  a = -1
  
  For a = 0 To arfileTodos.Count - 1
    If File.Ext(arfileTodos[a]) = "png" Then 
      arfile.Add(arfileTodos[a])
    Endif
  Next
  
  a = -1
  For Each nombrefile In arfile
    a += 1
    arfile[a] = User.home & "/" & "bingoedu/" & bingotmp.NombreFichero & "/" & arfile[a]
  Next
  
  arfile.Insert(ArrayCuadroBlancos)
  
  NumeroPaginas = bingotmp.NumeroCartones / (2 * 2)
  
  If Int(NumeroPaginas) <> (bingotmp.NumeroCartones / (2 * 2)) Then 
    NumeroPaginas = Int(NumeroPaginas) + 1 'añado una página porque no cabe en una entera
  Endif
  
  ncarton = -1
  
  If Not (Exist("/tmp/trabajo")) Then 
    Mkdir "/tmp/trabajo"
  Else
    'borrado de fichero...
    arfileborrar = Dir("/tmp/trabajo", "pag*", gb.file)
    
    For Each nombrefile In arfileborrar
      Kill "/tmp/trabajo/" & nombrefile
    Next
  Endif
  
  ruta = User.home & "/bingoedu/" & bingotmp.NombreFichero & "/"
  For paginas = 0 To NumeroPaginas - 1
    contenido = File.Load("drawing-2x2.svg")
    ncarton += 1
    contenido = Replace(contenido, "#ruta11#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta12#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta21#", arfile[ncarton])
    
    ncarton += 1
    contenido = Replace(contenido, "#ruta22#", arfile[ncarton])
    
    File.Save("/tmp/trabajo/pag" & Str$(paginas) & ".svg", contenido)
    
    'convierto en png.... Shell     
    Shell ("inkscape " & "/tmp/trabajo/pag" & Str$(paginas) & ".svg" & " --export-dpi=200 --export-png=" & "/tmp/trabajo/pag" & Str$(paginas) & ".png") To salida
    
  Next
  Dec Application.busy  
  Shell "pcmanfm /tmp/trabajo"
  
  Message.Info(("Terminado!!!"))
  
End

'----------------------------------------------------------------------
'http://www.gambas-es.org/viewtopic.php?f=1&t=2054&postdays=0&postorder=asc&start=10
'----------------------------------------------------------------------
'
Public Function URLDecode(txt As String) As String
  ''' Descodifica los caracteres hexadecimales en las URI's recorriendo la cadena dada
  ''' Params: txt la URI a descodificar
  ''' Return: la URI descodificada
  
  Dim txt_len As Integer
  Dim i As Integer
  Dim ch As String
  Dim digits As String
  Dim resultado As String
  
  resultado = ""
  txt_len = Len(txt)
  i = 1
  Do While i <= txt_len
    ' Examinar el siguiente caracter
    ch = Mid$(txt, i, 1)
    If ch = "+" Then
      ' Convertir a espacio
      resultado = resultado & " "
    Else If ch <> "%" Then
      ' Normal, no cambiar
      resultado = resultado & ch
    Else If i > txt_len - 2 Then
      resultado = resultado & ch
    Else
      ' Obtener los siguientes caracteres hex.
      digits = Mid$(txt, i + 1, 2)
      ' Debug digits
      ' aquí convertimos el valor hexadecimal a entero y
      ' se lo pasamos a Chr que devuelve el carácter correcto.
      resultado = resultado & Chr$(CInt(Val("&" & digits)))
      i = i + 2
    Endif
    i = i + 1
  Loop
  
  Return resultado
  
End

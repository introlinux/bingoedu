' Gambas class file

Event creandoPagina(n As Integer)
Event creandoelemento(n As Integer)
Event datosElementosPagina(elementos As Integer, paginas As Integer)

Event CreandoBingoInicion()

Event CreandoBingoFin()

Public Sub imprimirBingo(bingotmp As Bingo)
  
  Dim ruta As String
  Dim paginas As Integer
  Dim NumeroPaginas As Integer
  
  Dim arfile As New String[]
  Dim arfileborrar As String[]
  Dim nombrefile As String
  
  Dim contenido As String
  
  Dim salida As String
  
  Dim contadorElemento As Integer
  
  Dim a As Integer
  Dim arfileTodos As String[]
  
  Dim totalelementos As Integer
  
  Inc Application.busy  
  
  FormAvanceInformeBingo.creandoinforme = Me
  FormAvanceInformeBingo.Show()
  Wait 0.1
  'calcular el numero de p치ginas... en PlantillaDatosREV01.svg caben 8 elementos
  NumeroPaginas = bingotmp.ArrayElementosBingo.Count / 8
  
  If Int(NumeroPaginas) <> (bingotmp.ArrayElementosBingo.Count / (8)) Then 
    NumeroPaginas = Int(NumeroPaginas) + 1 'a침ado una p치gina porque no cabe en una entera
  Endif
  
  'crear directorio de trabajo, con BingoPag borrados 
  If Not (Exist("/tmp/trabajo")) Then 
    Mkdir "/tmp/trabajo"
  Else
    'borrado de fichero...
    arfileborrar = Dir("/tmp/trabajo", "BingoPag*", gb.file)
    
    For Each nombrefile In arfileborrar
      Kill "/tmp/trabajo/" & nombrefile
    Next
  Endif
  
  ruta = User.home & "/bingoedu/" & bingotmp.NombreFichero & "/"
  
  totalelementos = NumeroPaginas * 8
  paginas = NumeroPaginas 
  
  'actualizo formulario... ENVIO DATOS DE PARTIDA
  Raise datosElementosPagina(totalelementos, paginas)
  'actualizo formulario... PAGINAS
  Raise creandoPagina(0)
  
  For paginas = 0 To NumeroPaginas - 1
    contenido = File.Load("PlantillaDatosREV01.svg")
    'reemplazar 8 veces palabra: ruta11 a 18, #11# a #18# ruta21 a 28, #21# a #28#, 
    InsertoElementos(ByRef contenido, ByRef bingotmp, ByRef contadorElemento)
    
    'reemplazar numero de paginas
    contenido = Replace(contenido, "#Pag#", Str$(paginas + 1))
    contenido = Replace(contenido, "#TotalPag#", Str$(NumeroPaginas))
    contenido = Replace(contenido, "#bingo#", "Nombre Bingo: " & bingotmp.NombreFichero)
    
    ' genero  fichero
    File.Save("/tmp/trabajo/BingoPag" & Str$(paginas) & ".svg", contenido)
    
    'convierto en png.... Shell     
    Shell ("inkscape " & "/tmp/trabajo/BingoPag" & Str$(paginas) & ".svg" & " --export-dpi=200 --export-png=" & "/tmp/trabajo/BingoPag" & Str$(paginas) & ".png") To salida
    'actualizo formulario...
    Raise creandoPagina(paginas + 1)
  Next
  Dec Application.busy  
  
  If NumeroPaginas <> 0 Then 
    crearpdf()
    Message.Info(("Terminado!!!"))
    
  Else
    Message.Warning(("No se ha generado ninguna p치gina"))
  Endif  
  
End

Private Sub InsertoElementos(ByRef contenido As String, ByRef btmp As Bingo, ByRef contadorElemento As Integer)
  
  Dim eb As Variant 'elemento bingo
  Dim ec As Variant 'elemento carton
  
  Dim repite As Integer
  
  Dim ruta1 As String
  Dim ruta2 As String
  Dim texto1 As String
  Dim texto2 As String
  
  Dim rutaimagen1 As String
  Dim rutaimagen2 As String
  Dim textobingo As String
  Dim textoCarton As String
  
  For repite = 1 To 8
    contadorElemento += 1
    Raise creandoelemento(contadorElemento)
    ruta1 = "#ruta" & Str$(repite) & "1#"
    texto1 = "#" & Str$(repite) & "1#"
    
    ruta2 = "#ruta" & Str$(repite) & "2#"
    texto2 = "#" & Str$(repite) & "2#"
    
    If contadorElemento > btmp.ArrayElementosBingo.Count Then
      
      'hacer sustitucion por espacios vacios...
      contenido = Replace(contenido, ruta1, "/tmp/cuadroBlanco.jpg")
      contenido = Replace(contenido, texto1, "")
      contenido = Replace(contenido, ruta2, "/tmp/cuadroBlanco.jpg")
      contenido = Replace(contenido, texto2, "")
      
    Else
      
      eB = btmp.ArrayElementosBingo[contadorElemento - 1]
      
      eC = btmp.buscaElemento(eb.enlace, btmp.ArrayElementosCarton)
      ''TODO: QUEDA por hacer definir lo que se sustituye...
      '----------------------------
      'Datos de la columna Bingo
      '----------------------------
      Select Case eb.tipoElemento()
          'si es sonido
        Case Upper$("ElementoSonido")
          rutaimagen1 = "/tmp/iconosonido32.png"
          textobingo = eb.rutasonido
          
          'si es imagen
        Case Upper$("ElementoImagen")
          rutaimagen1 = User.home & "/bingoedu/" & btmp.NombreFichero & "/" & eB.rutaimagen
          textobingo = eb.rutaimagen
          
          'si es texto
        Case Upper$("ElementoTexto")
          rutaimagen1 = "/tmp/iconoletra32.png"
          textobingo = eb.texto
          
      End Select
      '----------------------------
      'Datos de la columna Carton
      '----------------------------
      Select Case eC.tipoElemento()
          'si es imagen
        Case Upper$("ElementoImagen")
          rutaimagen2 = User.home & "/bingoedu/" & btmp.NombreFichero & "/" & eC.rutaimagen
          textoCarton = ec.rutaimagen
          
          'si es texto
        Case Upper$("ElementoTexto")
          rutaimagen2 = "/tmp/iconoletra32.png"
          textoCarton = ec.texto
      End Select
      
      'hacer sustitucion por espacios vacios...
      contenido = Replace(contenido, ruta1, rutaimagen1)
      contenido = Replace(contenido, texto1, textobingo)
      contenido = Replace(contenido, ruta2, rutaimagen2)
      contenido = Replace(contenido, texto2, textoCarton)
      
    Endif
    
  Next
  
End

Private Sub crearpdf()
  
  Dim salida As String
  Dim hproc As Process
  
  Inc Application.Busy
  Raise CreandoBingoInicion()
  Wait 0.1
  
  hproc = Shell "cd /tmp/trabajo;convert -quality 100 *.png bingo.pdf" 
  
  While hproc.state = Process.Running
    
    Wait 0.1
  Wend
  
  Desktop.Open("/tmp/trabajo/bingo.pdf")
  Dec Application.Busy  
  Raise CreandoBingoFin()
  
End
